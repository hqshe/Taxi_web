// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taxi_site.Data;

#nullable disable

namespace Taxi_site.Migrations
{
    [DbContext(typeof(Taxi_siteDbContext))]
    [Migration("20231121195707_AddCategoryToDatabase")]
    partial class AddCategoryToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Taxi_site.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Taxi_site.Models.DriverBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Expiring")
                        .HasColumnType("int");

                    b.Property<int>("FreePatrol")
                        .HasColumnType("int");

                    b.Property<int>("HigherPayment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DriverBonuses");
                });

            modelBuilder.Entity("Taxi_site.Models.DriverDeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HigherPayment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DriverDeals");
                });

            modelBuilder.Entity("Taxi_site.Models.DriverPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("ExitRate")
                        .HasColumnType("float");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessPayment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DriverPunishments");
                });

            modelBuilder.Entity("Taxi_site.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<string>("EndPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("StartPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Taxi_site.Models.PassengerBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Expiring")
                        .HasColumnType("int");

                    b.Property<int>("FreeOrders")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PassengerBonuses");
                });

            modelBuilder.Entity("Taxi_site.Models.PassengerDeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PassengerDeals");
                });

            modelBuilder.Entity("Taxi_site.Models.PassengerPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("ExitRate")
                        .HasColumnType("float");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HigherPayment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PassengerPunishments");
                });

            modelBuilder.Entity("Taxi_site.Models.RegisteredDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BonusId")
                        .HasColumnType("int");

                    b.Property<string>("CarInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DealId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PunismentId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BonusId");

                    b.HasIndex("DealId");

                    b.HasIndex("PunismentId");

                    b.ToTable("RegisteredDrivers");
                });

            modelBuilder.Entity("Taxi_site.Models.RegisteredPassenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BonusId")
                        .HasColumnType("int");

                    b.Property<int?>("DealId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PunishmentId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BonusId");

                    b.HasIndex("DealId");

                    b.HasIndex("PunishmentId");

                    b.ToTable("RegisteredPassengers");
                });

            modelBuilder.Entity("Taxi_site.Models.Order", b =>
                {
                    b.HasOne("Taxi_site.Models.RegisteredDriver", "RegisteredDriver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taxi_site.Models.RegisteredPassenger", "RegisteredPassenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegisteredDriver");

                    b.Navigation("RegisteredPassenger");
                });

            modelBuilder.Entity("Taxi_site.Models.RegisteredDriver", b =>
                {
                    b.HasOne("Taxi_site.Models.DriverBonus", "DriverBonus")
                        .WithMany()
                        .HasForeignKey("BonusId");

                    b.HasOne("Taxi_site.Models.DriverDeal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealId");

                    b.HasOne("Taxi_site.Models.DriverPunishment", "DriverPunishment")
                        .WithMany()
                        .HasForeignKey("PunismentId");

                    b.Navigation("Deal");

                    b.Navigation("DriverBonus");

                    b.Navigation("DriverPunishment");
                });

            modelBuilder.Entity("Taxi_site.Models.RegisteredPassenger", b =>
                {
                    b.HasOne("Taxi_site.Models.PassengerBonus", "PassengerBonus")
                        .WithMany()
                        .HasForeignKey("BonusId");

                    b.HasOne("Taxi_site.Models.PassengerDeal", "Deal")
                        .WithMany()
                        .HasForeignKey("DealId");

                    b.HasOne("Taxi_site.Models.PassengerPunishment", "PassengerPunishment")
                        .WithMany()
                        .HasForeignKey("PunishmentId");

                    b.Navigation("Deal");

                    b.Navigation("PassengerBonus");

                    b.Navigation("PassengerPunishment");
                });
#pragma warning restore 612, 618
        }
    }
}
